swagger: '2.0'
info:
  version: '0.1'
  title: Test
schemes: [ http ]
basePath: "/api"
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: Authorization
security:
  - APIKey: []
paths:
  /biblio:
    get:
      x-mojo-to: "biblio#get"
      operationId: biblioGet
      consumes:
        - application/json
      parameters:
      - in: body
        name: body
        schema:
          type: object
      responses:
        200:
          description: Ok status
          schema:
            type: array
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/export:
    get:
      x-mojo-to: "biblio#check"
      operationId: biblioExportCheck
      consumes:
        - application/json
      parameters:
      - in: query
        name: marcxml
        type: string
        required: true
        description: Marcxml as string
      - in: query
        name: interface
        required: true
        type: string
        description: Interface name
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
    post:
      x-mojo-to: "biblio#export"
      operationId: biblioExport
      consumes:
        - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: body
        schema:
          type: object
          required:
            - localnumber
            - interface
            - localmarc
          properties:
            localnumber:
              type: integer
            localmarc:
              type: [object, string]
            remotemarc:
              type: [object, string]
            interface:
              type: string
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/import:
    get:
      x-mojo-to: "biblio#check"
      operationId: biblioImportCheck
      consumes:
        - application/json
      parameters:
      - in: query
        name: marcxml
        type: string
        required: true
        description: Marcxml as string
      - in: query
        name: interface
        required: true
        type: string
        description: Interface name
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
    post:
      x-mojo-to: "biblio#import"
      operationId: biblioImport
      consumes:
        - application/x-www-form-urlencoded
      parameters:
      - in: body
        name: body
        schema:
          type: object
          required:
            - remotenumber
            - interface
          properties:
            localnumber:
              type: integer
            localmarc:
              type: [object, string]
            remotemarc:
              type: [object, string]
            interface:
              type: string
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: "#/responses/UnauthorizedError"
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      Authorization:
        type: string