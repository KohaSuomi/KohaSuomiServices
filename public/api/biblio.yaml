swagger: '2.0'
info:
  version: '1.0'
  title: Biblio exporter
schemes: [http, https]
basePath: '/api'
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: Authorization
security:
  - APIKey: []
paths:
  /biblio:
    get:
      x-mojo-to: 'biblio#list'
      operationId: biblioList
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/{id}:
    get:
      x-mojo-to: 'biblio#get'
      operationId: biblioGet
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Get export report from biblio
      responses:
        200:
          description: Ok status
          schema:
            type: array
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/record/{id}:
    get:
      x-mojo-to: 'biblio#record'
      operationId: biblioRecord
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Get record
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/report/{interface_name}:
    get:
      x-mojo-to: 'biblio#report'
      operationId: biblioInterface
      consumes:
        - application/json
      parameters:
        - in: path
          name: interface_name
          required: true
          type: string
          description: Get export report from interface
        - in: query
          name: page
          type: integer
          description: Result page
        - in: query
          name: limit
          type: integer
          description: Result limit
        - in: query
          name: status
          type: string
          description: Result status
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/{id}/force:
    put:
      x-mojo-to: 'biblio#force'
      operationId: biblioForceExport
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Force export biblio
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/export:
    post:
      x-mojo-to: 'biblio#export'
      operationId: biblioExport
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - source_id
              - interface
              - marc
            properties:
              target_id:
                type: [integer, string, 'null']
              source_id:
                type: [integer, string]
              marc:
                type: [object, string]
              interface:
                type: string
              username:
                type: string
              parent_id:
                type: [integer, string, 'null']
              force:
                type: [integer, 'null']
              componentparts:
                type: [integer, 'null']
              fetch_interface:
                type: [string, 'null']
              check:
                type: boolean
              componentparts_count:
                type: [integer, 'null']
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/search:
    post:
      x-mojo-to: 'biblio#check'
      operationId: biblioExportCheck
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - marcxml
              - interface
            properties:
              marcxml:
                type: string
              interface:
                type: string
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/active/{interface}/{target_id}:
    get:
      x-mojo-to: 'biblio#getActiveRecord'
      operationId: biblioGetActiveRecord
      consumes:
        - application/json
      parameters:
        - in: path
          name: interface
          required: true
          type: string
          description: Record's interface
        - in: path
          name: target_id
          required: true
          type: integer
          description: Target id
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/active:
    post:
      x-mojo-to: 'biblio#activate'
      operationId: biblioSetActive
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - interface_name
              - target_id
              - marcxml
            properties:
              interface:
                type: string
                description: Name of the interface
              target_id:
                type: integer
                description: Records id on local environment
              marcxml:
                type: string
                description: Marcxml
              updated:
                type: string
                description: Datetime of record's update
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/active/identifier:
    post:
      x-mojo-to: 'biblio#activateIdentifier'
      operationId: biblioSetActiveIdentifier
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: body
          name: body
          schema:
            type: array
            items:
              type: object
              required:
                - interface_name
                - target_id
                - identifier
                - identifier_field
              properties:
                interface:
                  type: string
                  description: Name of the interface
                target_id:
                  type: integer
                  description: Records id on local environment
                identifier:
                  type: string
                  description: Record's identifier
                identifier_field:
                  type: string
                  description: Record's identifier field
                updated:
                  type: string
                  description: Datetime of record's update
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/active/{id}:
    put:
      x-mojo-to: 'biblio#updateActiveRecord'
      operationId: biblioUpdateActiveRecord
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Active record id
        - in: formData
          name: identifier_field
          required: true
          type: string
          description: Record's identifier field
        - in: formData
          name: identifier
          required: true
          type: string
          description: Record's identifier
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
    delete:
      x-mojo-to: 'biblio#deleteActiveRecord'
      operationId: biblioDeleteActiveRecord
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: Active record id
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/active/lastrecord:
    get:
      x-mojo-to: 'biblio#lastrecord'
      operationId: biblioLastActiveRecord
      consumes:
        - application/json
      parameters:
        - in: query
          name: interface
          type: string
          description: Interface name
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
  /biblio/broadcast:
    post:
      x-mojo-to: 'biblio#broadcast'
      operationId: biblioBroadCast
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - source_id
              - marcxml
              - updated
            properties:
              source_id:
                type: integer
                description: Records id on local environment
              marcxml:
                type: string
                description: Marcxml
              updated:
                type: string
                description: Datetime of record's update
      responses:
        200:
          description: Ok status
          schema:
            type: object
        401:
          $ref: '#/responses/UnauthorizedError'
        404:
          description: Not found
          schema:
            type: object
        500:
          description: Internal server error
          schema:
            type: object
responses:
  UnauthorizedError:
    description: API key is missing or invalid
    headers:
      Authorization:
        type: string
