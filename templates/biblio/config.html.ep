% layout 'default';
% title 'Welcome';
    <div class="container-fluid">
      <div class="row">
        %= include '_sidebar'

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4">
          <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom">
            <h1 class="h2">Configurations</h1>
          </div>
          <div id="app">
            <h2>Interfaces</h2>
            <div class="table-responsive">
              <table class="table table-striped table-sm">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Interface</th>
                    <th>Type</th>
                    <th>URL</th>
                    <th>Port</th>
                  </tr>
                </thead>
                <tbody>
                  <tr is="config-list"
                    v-for="(config, index) in configs"
                    v-bind:config="config">
                  </tr>
                </tbody>
              </table>
              <div>
                <p v-if="errors.length">
                  <b>Please correct the following error(s):</b>
                  <ul>
                    <li v-for="error in errors">{{ error }}</li>
                  </ul>
                </p>
                <form @submit="checkForm">
                  <div class="input-group">
                    <input type="text" class="form-control" v-model="name" placeholder="Name">
                    <select class="form-control" v-model="interface" placeholder="Interface">
                      <option value='' selected>Select interface</option>
                      <option value='REST'>REST</option>
                    </select>
                    <select class="form-control" v-model="type" placeholder="Type">
                      <option value='' selected>Select type</option>
                      <option value='search'>search</option>
                      <option value='get'>get</option>
                      <option value='add'>add</option>
                      <option value='update'>update</option>
                    </select>
                    <input type="text" class="form-control" v-model="url" placeholder="Url">
                    <input type="text" class="form-control" v-model="port" placeholder="Port">
                    <button class="btn btn-sm btn-primary" type="submit">Submit</button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
    <template id="list-items">
      <tr>
        <td v-on:click="updateToggle" style="cursor:pointer">
          <div v-if="showUpdate"><input type="text" class="form-control" v-model="config.name"></div>
          <div v-else>{{config.name}}</div>
        </td>
        <td v-on:click="updateToggle" style="cursor:pointer">
          <div v-if="showUpdate"><select class="form-control" v-model="config.interface" placeholder="Interface">
            <option value='REST'>REST</option>
          </select>
          </div>
          <div v-else>{{config.interface}}</div>
        </td>
        <td v-on:click="updateToggle" style="cursor:pointer">
          <div class="d-inline-block" v-if="showUpdate"><select class="form-control" v-model="config.type" placeholder="Type">
              <option value='search'>search</option>
              <option value='get'>get</option>
              <option value='add'>add</option>
              <option value='update'>update</option>
            </select>
          </div>
          <div v-else>{{config.type}}</div>
        </td>
        <td v-on:click="updateToggle" style="cursor:pointer">
          <div class="d-inline-block" v-if="showUpdate"><input type="text" class="form-control" v-model="config.url"></div>
          <div v-else>{{config.url}}</div>
        </td>
        <td style="cursor:pointer">
          <div class="d-inline-block" v-if="showUpdate"><input type="text" class="form-control" v-model="config.port"></div>
          <div v-on:click="updateToggle" v-else>{{config.port}}</div>
          <div class="d-inline-block" v-if="showUpdate"><button v-on:click="updateConfig(config)" class="btn btn-sm btn-secondary" type="submit">Update</button></div>
          <div class="d-inline-block" v-if="showUpdate"><button v-on:click="deleteConfig(config)" class="btn btn-sm btn-warning" type="submit">Delete</button></div>
        </td>
      </tr>
    </template>
    <script>
      var baseendpoint = '<%= $baseendpoint %>';
      new Vue({
        el: '#app',
        created() {
            this.fetchData();	
        },
        data: {
            errors: [],
            configs: [],
            interface: "",
            name: "",
            type: "",
            url: "",
            port: ""
        },
        methods: {
            fetchData() {
            axios.get(baseendpoint+'config', {
              params: {
                service: 'biblio',
                table: 'interface'
              }
            }).then(response => {
                this.configs = response.data;
                });
            },
            addConfig() {
            axios.post(baseendpoint+'config',
              {
                service: 'biblio',
                table: 'interface',
                params: {interface: this.interface, name: this.name, type: this.type, url: this.url, port: this.port}
              }
            ).then(response => {
                this.fetchData();
                });
            },
            updateConfig(config) {
              axios.put(baseendpoint+'config',
              {
                service: 'biblio',
                table: 'interface',
                id: config.id,
                params: {interface: config.interface, name: config.name, type: config.type, url: config.url, port: config.port}
              }
            ).then(response => {
                
                });
            },
            deleteConfig(config) {
              axios.delete(baseendpoint+'config',
              {
                params: {
                  service: 'biblio',
                  table: 'interface',
                  id: config.id
                }
              }
            ).then(response => {
                this.fetchData();
                });
            },
            checkForm(e) {
               var url_validate = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;
              if (this.name && this.interface && this.type && this.url && this.port && $.isNumeric(this.port) && url_validate.test(this.url)) {
                this.addConfig();
              } 
              this.errors = [];

              if (!this.name) {
                this.errors.push('Name required.');
              }
              if (!this.interface) {
                this.errors.push('Interface required.');
              }
              if (!this.type) {
                this.errors.push('Type required.');
              }
              if (!this.url) {
                this.errors.push('Url required.');
              }
              if (!url_validate.test(this.url)) {
                this.errors.push('Incorrect url.');
              }
              if (!this.port) {
                this.errors.push('Port required.');
              }
              if (!$.isNumeric(this.port)) {
                this.errors.push('Incorrect port number.');
              }
              e.preventDefault();
            }
        }
    });
    Vue.component('config-list', {
      template: "#list-items",
      data: function() {
        return {
          showUpdate: false,
        }
      },
      methods: {
        updateConfig(config){
            this.showUpdate = false;
            this.$parent.updateConfig(config);
        },
        deleteConfig(config){
            this.showUpdate = false;
            this.$parent.deleteConfig(config);
        },
        updateToggle(){
            this.showUpdate = true;
        }
      },
      props: ['config']
    });
    </script>
